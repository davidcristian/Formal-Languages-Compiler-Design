program ::= stmtlist

newlines ::= newline | newline newlines
newline ::= CR LF | LF

decllist ::= declaration | declaration "," decllist
declaration ::= identifier ":" type | identifier ":" type "=" expression

primitive ::= "number" | "char" | "string"
arraydecl ::= "array" "<" primitive ">" "(" expression ")"
type ::= primitive | arraydecl

cmpdstmt ::= "{" stmtlist "}"
stmtlist ::= stmt | stmt newlines stmtlist

stmt ::= simplstmt | structstmt
simplstmt ::= decllist | assignstmt | iostmt

assignstmt ::= identifier "=" expression | identifier "[" expression "]" "=" expression
expression ::=  term | expression "+" term | expression "-" term
term ::= factor | term "*" factor | term "/" factor | term "%" factor
factor ::= "(" expression ")" | identifier | identifier "[" expression "]" | number | char | string

iostmt ::= "input" "(" identifier ")" | "output" "(" identifier ")"
structstmt ::= cmpdstmt | ifstmt | whilestmt

ifstmt ::= "if" "(" conditions ")" cmpdstmt | "if" "(" conditions ")" cmpdstmt "else" cmpdstmt
whilestmt ::= "while" "(" conditions ")" cmpdstmt

conditions ::= condition | condition "||" conditions
condition ::= simplcond | simplcond "&&" condition
simplcond ::= expression relation expression
relation ::= "<" | "<=" | "==" | "!=" | ">=" | ">"
