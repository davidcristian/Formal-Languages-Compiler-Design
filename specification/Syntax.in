# Olive language syntax
# - The lines up to "program" are EBNF
# - The rest of the lines are BNF

letter ::= "A".."Z" | "a".."z
symbol ::= " ".."!" | "#".."[" | "]".."~"
escape ::= "\" ('"' | "\")

non_zero ::= "1".."9"
digit ::= "0" | non_zero
number_constant ::= (["+" | "-"] non_zero {digit}) | "0"

character ::= letter | digit | symbol | escape
character_list ::= {character}
char_constant ::= "'" character "'"
string_constant ::= '"' character_list '"'

constant ::= number_constant | char_constant | string_constant
identifier ::= letter {letter}

program ::= statement_list
new_lines ::= "\r\n" | "\n" | "\r\n" new_lines | "\n" new_lines

variable ::= Identifier | array_variable
array_variable =  identifier "[" expression "]"
value ::= constant | variable

declaration_list ::= declaration | declaration "," declaration_list
declaration ::= identifier ":" type | identifier ":" type "=" expression

primitive ::= "number" | "char" | "string"
array_declaration ::= "array" "<" primitive ">" "(" expression ")"
type ::= primitive | array_declaration

compound_statement ::= "{" statement_list "}"
statement_list ::= statement | statement new_lines statement_list
statement ::= assign_statement | io_statement | declaration_list | if_statement | while_statement

assign_statement ::= variable "=" expression
expression ::=  term | expression "+" term | expression "-" term
term ::= factor | term "*" factor | term "/" factor | term "%" factor
factor ::= "(" expression ")" | value

io_statement ::= "input" "(" variable ")" | "output" "(" expression ")"
if_statement ::= "if" "(" conditions ")" compound_statement | "if" "(" conditions ")" compound_statement "else" compound_statement
while_statement ::= "while" "(" conditions ")" compound_statement

conditions ::= condition | condition "||" conditions
condition ::= simple_condition | simple_condition "&&" condition
simple_condition ::= expression relation expression
relation ::= "==" | "!=" | "<" | ">" | "<=" | ">="
